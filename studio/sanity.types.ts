/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch'
  background?: string
  foreground?: string
  population?: number
  title?: string
}

export type SanityImagePalette = {
  _type: 'sanity.imagePalette'
  darkMuted?: SanityImagePaletteSwatch
  lightVibrant?: SanityImagePaletteSwatch
  darkVibrant?: SanityImagePaletteSwatch
  vibrant?: SanityImagePaletteSwatch
  dominant?: SanityImagePaletteSwatch
  lightMuted?: SanityImagePaletteSwatch
  muted?: SanityImagePaletteSwatch
}

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions'
  height?: number
  width?: number
  aspectRatio?: number
}

export type Geopoint = {
  _type: 'geopoint'
  lat?: number
  lng?: number
  alt?: number
}

export type Network = {
  _id: string
  _type: 'network'
  _createdAt: string
  _updatedAt: string
  _rev: string
  links?: Array<{
    title?: string
    url?: string
    _type: 'link'
    _key: string
  }>
}

export type About = {
  _id: string
  _type: 'about'
  _createdAt: string
  _updatedAt: string
  _rev: string
  description?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
  image?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  awards?: Array<{
    placeholder?: string
    url?: string
    _type: 'award'
    _key: string
  }>
}

export type Projects = {
  _id: string
  _type: 'projects'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  thumbnail?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  categories?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'categories'
  }>
  description?: {
    fr?: string
    en?: string
  }
  coverImage?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  gallery?: Array<{
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    caption?: string
    _type: 'image'
    _key: string
  }>
  publishedAt?: string
}

export type SanityImageCrop = {
  _type: 'sanity.imageCrop'
  top?: number
  bottom?: number
  left?: number
  right?: number
}

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot'
  x?: number
  y?: number
  height?: number
  width?: number
}

export type SanityImageAsset = {
  _id: string
  _type: 'sanity.imageAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  metadata?: SanityImageMetadata
  source?: SanityAssetSourceData
}

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata'
  location?: Geopoint
  dimensions?: SanityImageDimensions
  palette?: SanityImagePalette
  lqip?: string
  blurHash?: string
  hasAlpha?: boolean
  isOpaque?: boolean
}

export type Categories = {
  _id: string
  _type: 'categories'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: {
    fr?: string
    en?: string
  }
  slug?: Slug
}

export type Slug = {
  _type: 'slug'
  current?: string
  source?: string
}

export type Font = {
  _id: string
  _type: 'font'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  fontFile?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.fileAsset'
    }
    media?: unknown
    _type: 'file'
  }
  fontWeight?: 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900
  isDefault?: boolean
}

export type Design = {
  _id: string
  _type: 'design'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  isActive?: boolean
  colors?: {
    primary?: string
    secondary?: string
    background?: {
      light?: string
      dark?: string
    }
    text?: {
      light?: string
      dark?: string
    }
    hover?: {
      light?: string
      dark?: string
    }
  }
  typography?: {
    headings?: {
      name?: string
      fontFile?: {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.fileAsset'
        }
        media?: unknown
        _type: 'file'
      }
      fontWeight?: 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900
      fontStyle?: 'normal' | 'italic'
    }
    body?: {
      name?: string
      fontFile?: {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.fileAsset'
        }
        media?: unknown
        _type: 'file'
      }
      fontWeight?: 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900
      fontStyle?: 'normal' | 'italic'
    }
    mono?: {
      name?: string
      fontFile?: {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.fileAsset'
        }
        media?: unknown
        _type: 'file'
      }
      fontWeight?: 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900
      fontStyle?: 'normal' | 'italic'
    }
    baseSize?: number
    scaleRatio?: '1.067' | '1.125' | '1.2' | '1.25' | '1.333' | '1.414' | '1.5' | '1.618'
  }
  spacing?: {
    baseUnit?: number
    scale?: 'linear' | 'geometric'
  }
  borderRadius?: {
    small?: number
    medium?: number
    large?: number
  }
}

export type SanityFileAsset = {
  _id: string
  _type: 'sanity.fileAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  source?: SanityAssetSourceData
}

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData'
  name?: string
  id?: string
  url?: string
}

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | Geopoint
  | Network
  | About
  | Projects
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityImageMetadata
  | Categories
  | Slug
  | Font
  | Design
  | SanityFileAsset
  | SanityAssetSourceData
export declare const internalGroqTypeReferenceTo: unique symbol
